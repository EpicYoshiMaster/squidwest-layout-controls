{"mappings":"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","sources":["src/dashboard/Time.tsx","src/dashboard/components/TimeDisplay.tsx","src/helpers/utils.ts","src/helpers/hooks.ts"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { createRoot } from 'react-dom/client';\r\nimport { ErrorText } from './components/Layout';\r\nimport { TimeDisplay } from './components/TimeDisplay';\r\nimport { TimeInterval } from '../types/types';\r\nimport { useObsConnectionStatus } from '../helpers/hooks';\r\n\r\nexport function Time() {\r\n\r\n\tconst [breakTime, setBreakTime] = useState<TimeInterval>({ startTime: Date.now() });\r\n\tconst [gameTime, setGameTime] = useState<TimeInterval>({ startTime: Date.now(), endTime: Date.now() });\r\n\tconst [transitionTime, setTransitionTime] = useState<TimeInterval>({ startTime: Date.now() });\r\n\r\n\tconst [currentTime, setCurrentTime] = useState<number>( Date.now() );\r\n\tconst interval = useRef<number | null>(null);\r\n\r\n\tconst connected = useObsConnectionStatus(nodecg);\r\n\r\n\tconst onSceneChange = useCallback((value: { sceneName: string, timeStamp: number}) => {\r\n\t\tif(value.sceneName.includes(\"Game\")) {\r\n\t\t\tsetBreakTime((oldBreakTime) => oldBreakTime.endTime ? oldBreakTime : { ...oldBreakTime, endTime: value.timeStamp })\r\n\t\t\tsetGameTime((oldGameTime) => oldGameTime.endTime ? {startTime: value.timeStamp} : oldGameTime)\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetBreakTime(oldBreakTime => oldBreakTime.endTime ? {startTime: value.timeStamp} : oldBreakTime)\r\n\t\t\tsetGameTime((oldGameTime) => oldGameTime.endTime ? oldGameTime : { ...oldGameTime, endTime: value.timeStamp })\r\n\t\t}\r\n\r\n\t\tsetTransitionTime({ startTime: value.timeStamp });\r\n\t}, []);\r\n\r\n\tconst calcTime = useCallback((interval: TimeInterval) => {\r\n\t\treturn interval.endTime ? interval.endTime - interval.startTime : currentTime - interval.startTime;\r\n\t}, [currentTime]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!interval.current) {\r\n\t\t\tinterval.current = window.setInterval(() => {\r\n\t\t\t\tsetCurrentTime(Date.now());\r\n\t\t\t}, 10);\r\n\t\t}\r\n\r\n\t\treturn () => {\r\n\t\t\tif(!interval.current) return;\r\n\r\n\t\t\tclearInterval(interval.current);\r\n\t\t\tinterval.current = null;\r\n\t\t}\r\n\r\n\t}, [interval, setCurrentTime]);\r\n\r\n\tuseEffect(() => {\r\n\t\tnodecg.listenFor('onSceneChange', onSceneChange);\r\n\r\n\t\treturn () => {\r\n\t\t\tnodecg.unlisten('onSceneChange', onSceneChange);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<PanelContainer>\r\n\t\t\t{connected && (\r\n\t\t\t<Wrapper>\r\n\t\t\t\t<TimeDisplay timingName='Time On Break' time={calcTime(breakTime)} />\r\n\t\t\t\t<TimeDisplay timingName='Time On Game' time={calcTime(gameTime)} />\r\n\t\t\t\t<TimeDisplay timingName='Time Since Transition' time={calcTime(transitionTime)} />\t\r\n\t\t\t</Wrapper>\r\n\t\t\t)}\r\n\r\n\t\t\t{!connected && (\r\n\t\t\t<MarginWrapper>\r\n\t\t\t\t<ErrorText>\r\n\t\t\t\t\t<p>OBS is not currently connected!</p>\r\n\t\t\t\t\t<p>This panel provides information on OBS transitions and break timings.</p>\r\n\t\t\t\t\t<p>To use it, go to <strong>2. Settings</strong> and check the <strong>OBS Settings</strong> NodeCG Panel to enable websocket support.</p>\r\n\t\t\t\t</ErrorText>\r\n\t\t\t</MarginWrapper>\r\n\t\t\t)}\r\n\t\t\t\r\n\t\t</PanelContainer>\r\n\t)\r\n}\r\n\r\nconst PanelContainer = styled.div`\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\ttext-align: center;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n\tdisplay: contents;\r\n`;\r\n\r\nconst MarginWrapper = styled.div`\r\n\tmargin: 1.5rem 0;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<Time />);","\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { formatTimeHMSC } from '../../helpers/utils';\r\n\r\ninterface TimeDisplayProps {\r\n    timingName: string;\r\n\ttime: number;\r\n}\r\n\r\nexport const TimeDisplay: React.FC<TimeDisplayProps> = ({ timingName, time }) => {\r\n\r\n    return (\r\n        <Container>\r\n            <TimeHeader>{timingName}</TimeHeader>\r\n\t\t\t<Time>\r\n\t\t\t\t{formatTimeHMSC(time)}\r\n\t\t\t</Time>\r\n        </Container>\r\n    )\r\n};\r\n\r\nconst Container = styled.div`\r\n    display: contents;\r\n`;\r\n\r\nconst TimeHeader = styled.div`\r\n    font-size: 1.5rem;\r\n    font-weight: 700;\r\n    margin-top: 0.5rem;\r\n`;\r\n\r\nconst Time = styled.div`\r\n\tfont-size: 4rem;\r\n\tfont-weight: 600;\r\n\tfont-family: 'Courier New', Courier, Consolas, monospace;\r\n`;","import { ColorInfo } from 'schemas/matchData';\r\n\r\nexport const formatTimeHMSC = (ms: number): string => {\r\n\tms = ms > 0 ? ms : 0;\r\n\r\n\tconst hour = Math.floor(ms / 60 / 60 / 1000);\r\n\tms = ms % (60 * 60 * 1000);\r\n\r\n\tconst minute = Math.floor(ms / 60 / 1000);\r\n\tms = ms % (60 * 1000);\r\n\r\n\tconst second = Math.floor(ms / 1000);\r\n\tms = ms % 1000;\r\n\r\n\tconst centiseconds = Math.floor(ms / 10);\r\n\r\n\treturn `${hour}:${minute < 10 ? `0${minute}` : minute}:${second < 10 ? `0${second}` : second}.${centiseconds < 10 ? `0${centiseconds}` : centiseconds}`\r\n}\r\n\r\nexport const formatDateHM = (date: Date) => {\r\n\treturn date.getHours() + \":\" + ((date.getMinutes() < 10) ? \"0\" : \"\") + date.getMinutes();\r\n};\r\n\r\nexport const formatDateMDY = (date: Date) => {\r\n\treturn (date.getMonth() + 1) + \"/\" + date.getDate() + \"/\" + date.getFullYear();\r\n}\r\n\r\nexport const modulo = (dividend: number, divisor: number) => {\r\n\treturn ((dividend % divisor) + divisor) % divisor;\r\n}\r\n\r\nexport const getIndexColor = (index: number, list: ColorInfo[], swap: boolean) => {\r\n\treturn !swap ? list[modulo(index, list.length)].teamA : list[modulo(index, list.length)].teamB;\r\n}\r\n\r\nexport const lerp = (a: number, b: number, alpha: number) => { return a + alpha * (b - a)};\r\n\r\nexport const clamp = (value: number, min: number, max: number) => { return Math.min(Math.max(value, min), max)};","import NodeCG from '@nodecg/types';\r\nimport { useCallback, useEffect, useState } from 'react';\r\n\r\ntype ConnectionOptions = { onConnect?: () => void, onDisconnect?: () => void}\r\n\r\nexport const useObsConnectionStatus = (nodecg: NodeCG.ClientAPI, options?: ConnectionOptions) => {\r\n\tconst [ connected, setConnected ] = useState(false);\r\n\r\n\tconst onConnectionStatus = (value: {isConnected: boolean }) => {\r\n\t\tsetConnected(value.isConnected);\r\n\r\n\t\tif(options) {\r\n\t\t\tif(options.onConnect && value.isConnected) {\r\n\t\t\t\toptions.onConnect();\r\n\t\t\t}\r\n\r\n\t\t\tif(options.onDisconnect && !value.isConnected) {\r\n\t\t\t\toptions.onDisconnect();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tnodecg.listenFor('obsConnectionStatus', onConnectionStatus);\r\n\r\n\t\treturn () => {\r\n\t\t\tnodecg.unlisten('obsConnectionStatus', onConnectionStatus);\r\n\t\t}\r\n\t}, []);\r\n\r\n\treturn connected;\r\n}"],"names":[],"version":3,"file":"time.6153b083.js.map","sourceRoot":"../"}