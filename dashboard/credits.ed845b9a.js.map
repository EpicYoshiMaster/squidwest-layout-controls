{"mappings":"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","sources":["src/dashboard/Credits.tsx","src/dashboard/components/CollapseContainerItemList.tsx","src/dashboard/components/CollapseContainer.tsx","src/dashboard/components/FieldsetItemList.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport styled from 'styled-components'\r\nimport { CreditsData, CreditsRow } from 'schemas/creditsData';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Badge, ButtonWide, Fieldset, GridRow, Image, Input, Row, Select, Text } from './components/Layout';\r\nimport { useListenFor, useReplicant } from '@nodecg/react-hooks';\r\nimport { cloneDeep, isEqual } from 'lodash';\r\nimport { useListControl } from '../helpers/hooks';\r\nimport { getImagePath } from '../helpers/utils';\r\nimport { CollapseContainerItemList } from './components/CollapseContainerItemList';\r\nimport { FieldsetItemList } from './components/FieldsetItemList';\r\nimport { BundleImages } from 'schemas/bundleImages';\r\nimport { Commentator } from 'schemas/commentatorList';\r\n\r\nconst defaultCreditsRow = { name: \"Credit Name\", image: \"\", imageBundle: \"\", items: [] };\r\nconst defaultCredits: CreditsData = [{ name: \"Credit Name\", image: \"\", imageBundle: \"\", items: [] }];\r\n\r\nconst specialCreditsRows = [\r\n\t{ name: \"YOSHI\", colorTag: \"green\", disableFeatures: true },\r\n\t{ name: \"CURRENTEVENT\", colorTag: \"orange\", disableFeatures: true },\r\n\t{ name: \"NEXTEVENT\", colorTag: \"orange\", disableFeatures: true },\r\n\t{ name: \"Commentary\", colorTag: \"teal\", disableFeatures: false }\r\n]\r\n\r\nconst commentaryRowName = \"Commentary\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst isCreditsRow = (item: any): item is CreditsRow => {\r\n\tif(!item) return false;\r\n\r\n\treturn item.name !== undefined \r\n\t&& item.image !== undefined \r\n\t&& Array.isArray(item.items);\r\n}\r\n\r\nconst shouldDisableRowFeatures = (creditsRow: CreditsRow) => {\r\n\treturn specialCreditsRows.find((value) => value.name === creditsRow.name && value.disableFeatures);\r\n}\r\n\r\nexport function Credits() {\r\n\tconst [credits, setCredits] = useReplicant<CreditsData>('creditsData', { bundle: 'squidwest-layout-controls', defaultValue: defaultCredits });\r\n\tconst [bundleImages] = useReplicant<BundleImages>('bundleImages', { defaultValue: { bundles: [], selectedBundle: \"\", images: [] }});\r\n\tconst [selectedBundle, setSelectedBundle] = useState(\"\");\r\n\tconst [dashboardCredits, setDashboardCredits] = useState(defaultCredits);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!bundleImages) return;\r\n\r\n\t\tsetSelectedBundle(bundleImages.selectedBundle);\r\n\t}, [bundleImages]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!credits) return;\r\n\r\n\t\tsetDashboardCredits(cloneDeep(credits));\r\n\t}, [credits]);\r\n\r\n\tconst { \r\n\t\taddItem, \r\n\t\tdelete: {\r\n\t\t\tdeleteItem,\r\n\t\t\tdeleteConfirmIndex\r\n\t\t}, \r\n\t\timportList: { getRootProps, getInputProps, open, importError }, \r\n\t\texportList \r\n\t} = useListControl(dashboardCredits, setDashboardCredits, defaultCreditsRow, isCreditsRow, 'credits.json');\r\n\r\n\tconst hasUnsavedChanges = useMemo(() => {\r\n\t\treturn !isEqual(credits, dashboardCredits);\r\n\t}, [credits, dashboardCredits]);\r\n\r\n\tconst updateSelectedBundle = useCallback((value: string) => {\r\n\t\tsetSelectedBundle(value);\r\n\t\tnodecg.sendMessage('updateBundleImages', { ...bundleImages, selectedBundle: value });\r\n\t}, [bundleImages]);\r\n\r\n\tconst onCommsCredits = useCallback(( addCommentators: Commentator[] ) => {\r\n\t\tif(!addCommentators) return;\r\n\r\n\t\tconst commentaryCreditsIndex = dashboardCredits.findIndex((creditsRow) => creditsRow.name === commentaryRowName);\r\n\r\n\t\tif(commentaryCreditsIndex !== -1) {\r\n\t\t\tconst newCommentaryItems = dashboardCredits[commentaryCreditsIndex].items.slice();\r\n\r\n\t\t\taddCommentators.forEach((commentator) => {\r\n\t\t\t\tconst trimmed = commentator.name.trim();\r\n\r\n\t\t\t\tif(trimmed === \"\") return;\r\n\r\n\t\t\t\tif(!newCommentaryItems.includes(trimmed)) {\r\n\t\t\t\t\tnewCommentaryItems.push(trimmed);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tsetDashboardCredits((oldDashboardCredits) => oldDashboardCredits.map((creditsRow) => {\r\n\t\t\t\tif(creditsRow.name !== commentaryRowName) return creditsRow;\r\n\r\n\t\t\t\treturn { ...creditsRow, items: newCommentaryItems };\r\n\t\t\t}))\r\n\t\t}\r\n\t}, [dashboardCredits]);\r\n\r\n\tuseListenFor('commsCredits', onCommsCredits);\r\n\r\n\tconst updateCredits = useCallback(() => {\r\n\t\tsetCredits(dashboardCredits);\r\n\t}, [setCredits, dashboardCredits]);\r\n\r\n\treturn (\r\n\t\t<PanelContainer {...getRootProps()}>\r\n\t\t\t<input {...getInputProps()} />\r\n\t\t\t<Row $expand $height='4rem' $justify='center' $align='center'>\r\n\t\t\t\t<Fieldset>\r\n\t\t\t\t\t<legend><Text>Selected Bundle for Images</Text></legend>\r\n\t\t\t\t\t<Select $width=\"300px\" value={selectedBundle} onChange={(event) => { updateSelectedBundle(event.target.value); }}>\r\n\t\t\t\t\t\t{bundleImages && bundleImages.bundles.map((bundle, index) => (\r\n\t\t\t\t\t\t\t<option key={index} value={bundle}>{bundle}</option>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</Fieldset>\r\n\t\t\t</Row>\r\n\t\t\t<CollapseContainerItemList\r\n\t\t\t\tmaxHeight={600}\r\n\t\t\t\tlist={dashboardCredits}\r\n\t\t\t\tsetList={setDashboardCredits}\r\n\t\t\t\tgetColorTag={(creditsRow) => { \r\n\t\t\t\t\tconst specialRow = specialCreditsRows.find((value) => value.name === creditsRow.name);\r\n\r\n\t\t\t\t\treturn specialRow ? specialRow.colorTag : undefined; } }\r\n\t\t\t\trenderTitle={(creditsRow) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t{creditsRow.name}\r\n\t\t\t\t\t\t{(creditsRow.items.length > 0 || shouldDisableRowFeatures(creditsRow)) && (\r\n\t\t\t\t\t\t\t<Badge $colorTag='purple'>{shouldDisableRowFeatures(creditsRow) ? `Special Row` : `${creditsRow.items.length} Entries` }</Badge>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t\trenderItem={(creditsRow, changeRow, index) => (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<Row $height='4rem'>\r\n\t\t\t\t\t\t\t<Fieldset $expand>\r\n\t\t\t\t\t\t\t\t<legend><Text>Credit Name</Text></legend>\r\n\t\t\t\t\t\t\t\t<Input $expand type=\"text\" value={creditsRow.name} onChange={(event) => { changeRow({ name: event.target.value }); }} />\r\n\t\t\t\t\t\t\t</Fieldset>\r\n\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t{!shouldDisableRowFeatures(creditsRow) && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Fieldset $height=\"100px\" $expand={true}>\r\n\t\t\t\t\t\t\t\t\t<legend><Text>Image</Text></legend>\r\n\t\t\t\t\t\t\t\t\t<Row $height='100%' $expand>\r\n\t\t\t\t\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\t\t\t\t\t$width={creditsRow.image !== \"\" ? `275px` : `100%`} \r\n\t\t\t\t\t\t\t\t\t\t\tvalue={creditsRow.image} \r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => { changeRow({ image: event.target.value, imageBundle: event.target.value !== \"\" ? selectedBundle : \"\" }); } }>\r\n\t\t\t\t\t\t\t\t\t\t\t<optgroup label={`Selected (${creditsRow.imageBundle !== \"\" ? creditsRow.imageBundle : \"N/A\"})`}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value={creditsRow.image}>{creditsRow.image !== \"\" ? creditsRow.image : \"None\"}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t</optgroup>\r\n\t\t\t\t\t\t\t\t\t\t\t<optgroup label={selectedBundle}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<option value=\"\">None</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{bundleImages && bundleImages.images.map((imagePath, index) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={imagePath}>{imagePath}</option>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</optgroup>\r\n\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t{creditsRow.image !== \"\" && creditsRow.imageBundle !== \"\" && ( <Image $maxWidth='70px' height={70} src={getImagePath(creditsRow.imageBundle, creditsRow.image)} /> )}\r\n\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t</Fieldset>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t<FieldsetItemList\r\n\t\t\t\t\t\t\t\tlist={creditsRow.items}\r\n\t\t\t\t\t\t\t\tsetList={(newList) => { changeRow({ items: newList }); }}\r\n\t\t\t\t\t\t\t\trenderItem={(item, changeItem) => (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<Input $expand type=\"text\" value={item} onChange={(event) => { changeItem(event.target.value); }} />\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\tdefaultItem={\"\"}\r\n\t\t\t\t\t\t\t\ttitle=\"Entries\"\r\n\t\t\t\t\t\t\t\tmaxHeight={350}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<GridRow $height='2rem'>\r\n\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t\t<ButtonWide $colorTag={ deleteConfirmIndex === index ? 'dark-red' : 'red' } onClick={() => deleteItem(index) }>{ deleteConfirmIndex === index ? 'Confirm?' : 'Delete' }</ButtonWide>\r\n\t\t\t\t\t\t\t<div></div>\r\n\t\t\t\t\t\t</GridRow>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t/>\r\n\t\t\t<GridRow $height='3rem'>\r\n\t\t\t\t<ButtonWide $expand={true} $colorTag='green' onClick={() => { addItem(); }}>New Row</ButtonWide>\r\n\t\t\t\t<ButtonWide $expand={true} $colorTag={hasUnsavedChanges ? 'dark-red' : 'pink'} onClick={() => { updateCredits(); }}>{hasUnsavedChanges ? 'Save Changes' :  'Saved!'}</ButtonWide>\r\n\t\t\t\t<ButtonWide $expand={true} $colorTag='orange' onClick={() => { open(); }}>Import</ButtonWide>\r\n\t\t\t\t<ButtonWide $expand={true} $colorTag='blue' onClick={() => { exportList(); }}>Export</ButtonWide>\r\n\t\t\t</GridRow>\r\n\t\t\t{importError !== \"\" && (\r\n\t\t\t\t<Row $align='flex-end'><Text $colorTag='red'>ERROR: {importError}</Text></Row>\r\n\t\t\t)}\r\n\t\t</PanelContainer>\r\n\t)\r\n}\r\n\r\nconst PanelContainer = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tgap: 5px;\r\n\tpadding: 5px 10px 12px;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<Credits />);","import React, { useCallback } from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Text, Column, ButtonTiny } from \"./Layout\";\r\nimport { CollapseContainer } from \"./CollapseContainer\";\r\nimport { CaretUp, CaretDown } from \"@phosphor-icons/react\";\r\n\r\ninterface CollapseContainerItemListProps<T> {\r\n\tlist: T[];\r\n\tsetList: (newList: T[]) => void;\r\n\trenderTitle: (item: T, colorTag?: string | undefined) => React.ReactElement;\r\n\trenderItem: (item: T, changeItem: (partial: Partial<T>) => void, index: number, colorTag?: string | undefined) => React.ReactElement;\r\n\tgetColorTag?: (item: T) => string | undefined;\r\n\r\n\tmaxHeight?: number;\r\n\tcanSwapItems?: boolean;\r\n}\r\n\r\nexport const CollapseContainerItemList = <T,>({ list, setList, renderTitle, renderItem, maxHeight, canSwapItems = true, getColorTag = () => undefined }: CollapseContainerItemListProps<T>) => {\r\n\r\n\tconst moveItem = useCallback((itemIndex: number, moveForward: boolean) => {\r\n\t\tif((itemIndex <= 0 && !moveForward) || (itemIndex >= list.length - 1 && moveForward)) return;\r\n\r\n\t\tconst currentItem = list[itemIndex];\r\n\t\tconst swapIndex = itemIndex + (moveForward ? 1 : -1);\r\n\t\tconst swapItem = list[swapIndex];\r\n\r\n\t\tsetList(list.map((item, index) => {\r\n\t\t\tif(index === itemIndex) {\r\n\t\t\t\treturn swapItem;\r\n\t\t\t}\r\n\t\t\telse if(index === swapIndex) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}));\r\n\t}, [list, setList]);\r\n\r\n\tconst changeItem = useCallback((partialItem: Partial<T>, itemIndex: number) => {\r\n\t\tsetList(list.map((item, index) => {\r\n\t\t\tif(index !== itemIndex) return item;\r\n\r\n\t\t\treturn { ...item, ...partialItem };\r\n\t\t}))\r\n\t}, [list, setList]);\r\n\r\n\treturn (\r\n\t\t<ScrollContainer $maxHeight={maxHeight}>\r\n\t\t\t{list.length <= 0 && (\r\n\t\t\t\t<>\r\n\t\t\t\t\t<Text>There are no entries!</Text>\r\n\t\t\t\t\t<Text>...unless you click the button to add one, perhaps!</Text>\r\n\t\t\t\t</>\r\n\t\t\t)}\r\n\t\t\t{list.map((listItem, index, array) => {\r\n\t\t\t\tconst colorTag = getColorTag(listItem);\r\n\t\t\t\tconst title = renderTitle(listItem, colorTag);\r\n\t\t\t\tconst item = renderItem(listItem, (partialItem: Partial<T>) => { changeItem(partialItem, index); }, index, colorTag);\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<CollapseContainer \r\n\t\t\t\t\tkey={index}\r\n\t\t\t\t\tcolorTag={colorTag}\r\n\t\t\t\t\ttitle={(\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{canSwapItems && (\r\n\t\t\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t\t\t<ButtonTiny $colorTag='blue' $border={true} disabled={index <= 0} onClick={() => { moveItem(index, false); }}><CaretUp weight='bold' /></ButtonTiny>\r\n\t\t\t\t\t\t\t\t\t<ButtonTiny $colorTag='red' $border={true} disabled={index >= array.length - 1} onClick={() => { moveItem(index, true); }}><CaretDown weight='bold' /></ButtonTiny>\r\n\t\t\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{title}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</CollapseContainer>\r\n\t\t\t\t)\r\n\t\t\t})\r\n\r\n\t\t\t}\r\n\t\t</ScrollContainer>\r\n\r\n\t)\r\n}\r\n\r\nconst ScrollContainer = styled.div<{ $maxHeight?: number }>`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding-right: 8px;\r\n\r\n\t& > div {\r\n\t\tmargin-bottom: 5px;\r\n\t}\r\n\r\n\t& > div:last-of-type {\r\n\t\tmargin-bottom: 0;\r\n\t}\r\n\r\n\t${({ $maxHeight }) => $maxHeight ? \r\n\tcss`\r\n\toverflow: auto;\r\n\tmax-height: ${$maxHeight}px;\r\n\t` : css``}\r\n`;","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TransparentButton } from './Layout';\r\nimport { CaretDown, CaretUp } from '@phosphor-icons/react'\r\n\r\ninterface CollapseContainerProps {\r\n\ttitle: string | React.ReactElement;\r\n\tchildren: React.ReactNode;\r\n\tcolorTag?: string;\r\n}\r\n\r\nexport const CollapseContainer: React.FC<CollapseContainerProps> = ({ title, children, colorTag }) => {\r\n\tconst [collapsed, setCollapsed] = useState(true);\r\n\r\n\treturn (\r\n\t\t<Container $colorTag={colorTag}>\r\n\t\t\t<Header $colorTag={colorTag}>\r\n\t\t\t\t<Front>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Front>\r\n\t\t\t\t<TransparentButton onClick={() => { setCollapsed(!collapsed); }}>\r\n\t\t\t\t\t{collapsed ? (<CaretDown />) : (<CaretUp />)}\r\n\t\t\t\t</TransparentButton>\r\n\t\t\t</Header>\r\n\t\t\t{!collapsed && ( <Content $colorTag={colorTag}> {children} </Content> )}            \r\n\t\t</Container>\r\n\t)\r\n};\r\n\r\nconst Container = styled.div<{ $colorTag?: string }>`\r\n\tposition: relative;\r\n\r\n\twidth: 100%;\r\n\tborder-radius: 0.5rem;\r\n\tbackground-color: var(--collapse${({ $colorTag }) => $colorTag ? `-${$colorTag}` : ``});\r\n`;\r\n\r\nconst Header = styled.div<{ $colorTag?: string }>`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 3px 8px;\r\n\tgap: 5px;\r\n\tborder-radius: 0.5rem;\r\n\tbackground-color: var(--collapse${({ $colorTag }) => $colorTag ? `-${$colorTag}` : ``});\r\n\tborder: 3px solid var(--collapse-${({ $colorTag }) => $colorTag ? `${$colorTag}-` : ``}border);\r\n`;\r\n\r\nconst Front = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\tgap: 5px;\r\n\tfont-size: 1.3rem;\r\n\tfont-weight: 700;\r\n`;\r\n\r\nconst Content = styled.div<{ $colorTag?: string }>`\r\n\tposition: relative;\t\r\n\tmargin-top: -8px;\r\n\tpadding: 10px 8px 5px;\r\n\tborder: 3px solid var(--collapse-${({ $colorTag }) => $colorTag ? `${$colorTag}-` : ``}border);\r\n\tborder-top: none;\r\n\tborder-radius: 0 0 0.5rem 0.5rem;\r\n`;","import React, { useCallback } from \"react\";\r\nimport { Fieldset, Text, Row, Column, ButtonFieldset, ButtonTiny, ButtonSmall } from \"./Layout\";\r\nimport { X, Plus, CaretUp, CaretDown } from \"@phosphor-icons/react\";\r\nimport { cloneDeep } from \"lodash\";\r\n\r\ninterface FieldsetItemListProps<T> {\r\n\tlist: T[];\r\n\tsetList: (newList: T[]) => void;\r\n\trenderItem: (item: T, changeItem: (partial: Partial<T>) => void) => React.ReactElement;\r\n\tdefaultItem: T;\r\n\ttitle: string;\r\n\r\n\tmaxHeight?: number;\r\n\tcanAddItems?: boolean;\r\n\tcanDeleteItems?: boolean;\r\n\tcanSwapItems?: boolean;\r\n}\r\n\r\nexport const FieldsetItemList = <T,>({ list, setList, renderItem, defaultItem, title, maxHeight, canAddItems = true, canDeleteItems = true, canSwapItems = true }: FieldsetItemListProps<T>) => {\r\n\r\n\tconst moveItem = useCallback((itemIndex: number, moveForward: boolean) => {\r\n\t\tif((itemIndex <= 0 && !moveForward) || (itemIndex >= list.length - 1 && moveForward)) return;\r\n\r\n\t\tconst currentItem = list[itemIndex];\r\n\t\tconst swapIndex = itemIndex + (moveForward ? 1 : -1);\r\n\t\tconst swapItem = list[swapIndex];\r\n\r\n\t\tsetList(list.map((item, index) => {\r\n\t\t\tif(index === itemIndex) {\r\n\t\t\t\treturn swapItem;\r\n\t\t\t}\r\n\t\t\telse if(index === swapIndex) {\r\n\t\t\t\treturn currentItem;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn item;\r\n\t\t\t}\r\n\t\t}));\r\n\t}, [list, setList]);\r\n\r\n\tconst addItem = useCallback(() => {\r\n\t\tsetList([...list, cloneDeep(defaultItem)])\r\n\t}, [list, defaultItem, setList]);\r\n\r\n\tconst changeItem = useCallback((partialItem: Partial<T>, itemIndex: number) => {\r\n\t\tsetList(list.map((item, index) => {\r\n\t\t\tif(index !== itemIndex) return item;\r\n\r\n\t\t\tif(typeof partialItem === 'object') {\r\n\t\t\t\treturn { ...item, ...partialItem };\r\n\t\t\t}\r\n\r\n\t\t\treturn partialItem;\r\n\t\t}))\r\n\t}, [list, setList]);\r\n\r\n\tconst deleteItem = useCallback((itemIndex: number) => {\r\n\t\tsetList(list.filter((item, index) => index !== itemIndex))\r\n\t}, [list, setList]);\r\n\r\n\treturn (\r\n\t\t<Fieldset $column $maxHeight={maxHeight}>\r\n\t\t\t<legend>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Text>{title}</Text>\r\n\t\t\t\t\t{canAddItems && (\r\n\t\t\t\t\t\t<ButtonFieldset $colorTag='green' onClick={() => { addItem(); }}>\r\n\t\t\t\t\t\t\t<Plus weight=\"bold\" />\r\n\t\t\t\t\t\t</ButtonFieldset>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t</legend>\r\n\t\t\t{list.length <= 0 && (\r\n\t\t\t\t<Row $justify='center'>\r\n\t\t\t\t\t<Text>This list is empty! {canAddItems ? `Click the + to add items here.` : ``}</Text>\r\n\t\t\t\t</Row>\r\n\t\t\t)}\r\n\t\t\t{list.map((listItem, index, array) => {\r\n\t\t\t\tconst item = renderItem(listItem, (partialItem: Partial<T>) => { changeItem(partialItem, index); });\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t<Row $expand key={index}>\r\n\t\t\t\t\t{canSwapItems && (\r\n\t\t\t\t\t\t<Column>\r\n\t\t\t\t\t\t\t<ButtonTiny $colorTag='blue' $border={true} disabled={index <= 0} onClick={() => { moveItem(index, false); }}><CaretUp /></ButtonTiny>\r\n\t\t\t\t\t\t\t<ButtonTiny $colorTag='red' $border={true} disabled={index >= array.length - 1} onClick={() => { moveItem(index, true); }}><CaretDown /></ButtonTiny>\r\n\t\t\t\t\t\t</Column>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{item}\r\n\t\t\t\t\t{canDeleteItems && (\r\n\t\t\t\t\t\t<ButtonSmall $colorTag='red' onClick={() => { deleteItem(index); }}>\r\n\t\t\t\t\t\t\t<X weight=\"bold\" />\r\n\t\t\t\t\t\t</ButtonSmall>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Row>\r\n\t\t\t)})\r\n\t\t\t}\r\n\t\t</Fieldset>\r\n\t)\r\n}"],"names":["React","useCallback","useEffect","useState","useMemo","styled","CreditsData","CreditsRow","createRoot","Badge","ButtonWide","Fieldset","GridRow","Image","Input","Row","Select","Text","useListenFor","useReplicant","cloneDeep","isEqual","useListControl","getImagePath","CollapseContainerItemList","FieldsetItemList","BundleImages","Commentator","defaultCreditsRow","name","image","imageBundle","items","defaultCredits","specialCreditsRows","colorTag","disableFeatures","commentaryRowName","isCreditsRow","item","undefined","Array","isArray","shouldDisableRowFeatures","creditsRow","find","value","Credits","credits","setCredits","bundle","defaultValue","bundleImages","bundles","selectedBundle","images","setSelectedBundle","dashboardCredits","setDashboardCredits","addItem","delete","deleteItem","deleteConfirmIndex","importList","getRootProps","getInputProps","open","importError","exportList","hasUnsavedChanges","updateSelectedBundle","nodecg","sendMessage","onCommsCredits","addCommentators","commentaryCreditsIndex","findIndex","newCommentaryItems","slice","forEach","commentator","trimmed","trim","includes","push","oldDashboardCredits","map","updateCredits","event","target","index","specialRow","length","changeRow","imagePath","newList","changeItem","PanelContainer","div","withConfig","displayName","componentId","root","document","getElementById","render","css","Column","ButtonTiny","CollapseContainer","CaretUp","CaretDown","CollapseContainerItemListProps","list","T","setList","renderTitle","ReactElement","renderItem","partial","Partial","getColorTag","maxHeight","canSwapItems","moveItem","itemIndex","moveForward","currentItem","swapIndex","swapItem","partialItem","listItem","array","title","ScrollContainer","$maxHeight","TransparentButton","CollapseContainerProps","children","ReactNode","FC","collapsed","setCollapsed","Container","$colorTag","Header","Front","Content","ButtonFieldset","ButtonSmall","X","Plus","FieldsetItemListProps","defaultItem","canAddItems","canDeleteItems","filter"],"version":3,"file":"credits.ed845b9a.js.map","sourceRoot":"../"}