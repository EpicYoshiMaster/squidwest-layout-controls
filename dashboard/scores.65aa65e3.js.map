{"mappings":"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","sources":["src/dashboard/Scores.tsx","src/data/colors.json"],"sourcesContent":["\r\nimport React, { useCallback, useEffect, useState, useMemo } from 'react';\r\nimport styled from 'styled-components'\r\nimport { MatchData } from 'schemas/matchData';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Checkbox, GridRow, ButtonWide, Text, Row, Input, Fieldset } from './components/Layout';\r\nimport { useReplicant } from '@nodecg/react-hooks'\r\nimport { CaretLeft, CaretRight, Swap } from '@phosphor-icons/react';\r\nimport { modulo, getIndexColor, clamp } from '../helpers/utils';\r\nimport Colors from '../data/colors.json'\r\nimport { cloneDeep, isEqual } from 'lodash';\r\n\r\nconst MIN_SCORE = 0;\r\nconst MAX_SCORE = 9;\r\n\r\nconst defaultMatchData: MatchData = {\r\n\tmatchInfo: \"Round 1\",\r\n\tteamA: \"Team A\",\r\n\tteamB: \"Team B\",\r\n\tscoreA: 0,\r\n\tscoreB: 0,\r\n\tmatchColor: Colors.localMode[0],\r\n\tswapColor: false\r\n}\r\n\r\nexport function Scores() {\r\n\tconst [match, setMatch] = useReplicant<MatchData>('match', { \r\n\t\tbundle: 'squidwest-layout-controls',\r\n\t\tdefaultValue: defaultMatchData\r\n\t});\r\n\r\n\tconst [dashboardMatch, setDashboardMatch] = useState<MatchData>(defaultMatchData);\r\n\tconst [colorIndex, setColorIndex] = useState<number>(0);\r\n\tconst [colorLock, setColorLock] = useState<boolean>(false);\r\n\tconst [onlineMode, setOnlineMode] = useState<boolean>(false);\r\n\r\n\tconst colorList = useMemo(() => {\r\n\t\treturn colorLock ? Colors.colorLock : (onlineMode ? Colors.onlineMode : Colors.localMode);\r\n\t}, [colorLock, onlineMode]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!match) return;\r\n\r\n\t\tsetDashboardMatch(cloneDeep(match));\r\n\t}, [match]);\r\n\r\n\tconst saveChanges = useCallback(() => {\r\n\t\tsetMatch(dashboardMatch);\r\n\t}, [dashboardMatch, setMatch]);\r\n\r\n\tconst hasUnsavedChanges = useMemo(() => {\r\n\t\treturn !isEqual(match, dashboardMatch);\r\n\t}, [match, dashboardMatch]);\r\n\r\n\tconst showScores = useCallback(() => {\r\n\t\tnodecg.sendMessage('scoresControl', true);\r\n\t}, []);\r\n\r\n\tconst hideScores = useCallback(() => {\r\n\t\tnodecg.sendMessage('scoresControl', false);\r\n\t}, []);\r\n\t\r\n\tconst showCommentators = useCallback(() => {\r\n\t\tnodecg.sendMessage('commsControl', true);\r\n\t}, []);\r\n\r\n\tconst hideCommentators = useCallback(() => {\r\n\t\tnodecg.sendMessage('commsControl', false);\r\n\t}, []);\r\n\r\n\tconst updateColorIndex = useCallback((index: number) => {\r\n\t\tsetColorIndex(modulo(index, colorList.length));\r\n\t}, [colorList.length]);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDashboardMatch((currentMatch) => { return { ...currentMatch, matchColor: colorList[colorIndex]}});\r\n\t}, [colorList, colorIndex]);\r\n\r\n\treturn (\r\n\t\t<PanelContainer>\r\n\t\t\t<TeamScoreRow>\r\n\t\t\t\t<PanelColumn>\r\n\t\t\t\t\t<Fieldset $expand>\r\n\t\t\t\t\t\t<legend><Text>Round Info (opt.)</Text></legend>\r\n\t\t\t\t\t\t<Input type=\"text\" \r\n\t\t\t\t\t\t\t$expand\r\n\t\t\t\t\t\t\tvalue={dashboardMatch.matchInfo} \r\n\t\t\t\t\t\t\tonChange={(event) => { setDashboardMatch((currentMatch) => { return { ...currentMatch, matchInfo: event.target.value }})}}/>\r\n\t\t\t\t\t</Fieldset>\r\n\t\t\t\t\t<Fieldset $expand>\r\n\t\t\t\t\t\t<legend><Text>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<ColorDisplay $size={20} $color={getIndexColor(colorIndex, colorList, dashboardMatch.swapColor)} />\r\n\t\t\t\t\t\t\t\tTeam A\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Text></legend>\r\n\t\t\t\t\t\t<Input $expand $height='2.5rem' type=\"text\" value={dashboardMatch.teamA} onChange={(event) => { setDashboardMatch((currentMatch) => { return { ...currentMatch, teamA: event.target.value }}) }} />\r\n\t\t\t\t\t</Fieldset>\r\n\t\t\t\t\t<Fieldset $expand>\r\n\t\t\t\t\t\t<legend><Text>\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<ColorDisplay $size={20} $color={getIndexColor(colorIndex, colorList, !dashboardMatch.swapColor)} /> \r\n\t\t\t\t\t\t\t\tTeam B\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Text></legend>\r\n\t\t\t\t\t\t<Input $expand $height='2.5rem' type=\"text\" value={dashboardMatch.teamB} onChange={(event) => { setDashboardMatch((currentMatch) => { return { ...currentMatch, teamB: event.target.value }}) }} />\r\n\t\t\t\t\t</Fieldset>\r\n\t\t\t\t</PanelColumn>\r\n\t\t\t\t<ScoreColumn>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<ScoreButton $colorTag='red' \r\n\t\t\t\t\t\t\tonClick={() => { setDashboardMatch((currentMatch) => { return { ...currentMatch, scoreA: clamp(currentMatch.scoreA - 1, MIN_SCORE, MAX_SCORE)}}) }}>-</ScoreButton>\r\n\t\t\t\t\t\t<BigNumbers>\r\n\t\t\t\t\t\t\t{dashboardMatch.scoreA}\r\n\t\t\t\t\t\t</BigNumbers>\r\n\t\t\t\t\t\t<ScoreButton $colorTag='green' \r\n\t\t\t\t\t\t\tonClick={() => { setDashboardMatch((currentMatch) => { return { ...currentMatch, scoreA: clamp(currentMatch.scoreA + 1, MIN_SCORE, MAX_SCORE)}}) }}>+</ScoreButton>\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<ScoreButton $colorTag='red' \r\n\t\t\t\t\t\t\tonClick={() => { setDashboardMatch((currentMatch) => { return { ...currentMatch, scoreB: clamp(currentMatch.scoreB - 1, MIN_SCORE, MAX_SCORE)}}) }}>-</ScoreButton>\r\n\t\t\t\t\t\t<BigNumbers>\r\n\t\t\t\t\t\t\t{dashboardMatch.scoreB}\r\n\t\t\t\t\t\t</BigNumbers>\r\n\t\t\t\t\t\t<ScoreButton $colorTag='green' \r\n\t\t\t\t\t\t\tonClick={() => { setDashboardMatch((currentMatch) => { return { ...currentMatch, scoreB: clamp(currentMatch.scoreB + 1, MIN_SCORE, MAX_SCORE)}}) }}>+</ScoreButton>\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t</ScoreColumn>\r\n\t\t\t</TeamScoreRow>\r\n\t\t\t<Row $align='center'>\r\n\t\t\t\t<ColorButton $colorTag='purple' onClick={() => { updateColorIndex(colorIndex - 1); }}>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<CaretLeft />\r\n\t\t\t\t\t\t<ColorDisplay $size={25} $color={getIndexColor(colorIndex - 1, colorList, dashboardMatch.swapColor)} />\r\n\t\t\t\t\t\t<ColorDisplay $size={25} $color={getIndexColor(colorIndex - 1, colorList, !dashboardMatch.swapColor)} />\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t</ColorButton>\r\n\t\t\t\t<ColorButton $colorTag='purple' onClick={() => { setDashboardMatch((currentMatch) => { return { ...currentMatch, swapColor: !currentMatch.swapColor}}) }}>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<ColorDisplay $size={40} $color={getIndexColor(colorIndex, colorList, dashboardMatch.swapColor)} />\r\n\t\t\t\t\t\t<Swap />\r\n\t\t\t\t\t\t<ColorDisplay $size={40} $color={getIndexColor(colorIndex, colorList, !dashboardMatch.swapColor)} />\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t</ColorButton>\r\n\t\t\t\t<ColorButton $colorTag='purple' onClick={() => { updateColorIndex(colorIndex + 1); }}>\r\n\t\t\t\t\t<PanelRow>\r\n\t\t\t\t\t\t<ColorDisplay $size={25} $color={getIndexColor(colorIndex + 1, colorList, dashboardMatch.swapColor)} />\r\n\t\t\t\t\t\t<ColorDisplay $size={25} $color={getIndexColor(colorIndex + 1, colorList, !dashboardMatch.swapColor)} />\r\n\t\t\t\t\t\t<CaretRight />\r\n\t\t\t\t\t</PanelRow>\r\n\t\t\t\t</ColorButton>\r\n\t\t\t</Row>\r\n\t\t\t<GridRow $height='56px' $templateColumns='1fr 0.8fr 1fr'>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Text>Color Lock</Text>\r\n\t\t\t\t\t<Checkbox $checked={colorLock} onClick={() => { setColorLock(!colorLock); setColorIndex(0); } } />\r\n\t\t\t\t</Row>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Text>Online</Text>\r\n\t\t\t\t\t<Checkbox $checked={onlineMode} onClick={() => { setOnlineMode(!onlineMode); setColorIndex(0); } } />\r\n\t\t\t\t</Row>\r\n\t\t\t\t<ButtonWide $expand={true} $colorTag={hasUnsavedChanges ? 'dark-red' : 'pink'} onClick={() => { saveChanges(); }}>{hasUnsavedChanges ? 'Save Changes' :  'Saved!'}</ButtonWide>\r\n\t\t\t</GridRow>\r\n\t\t\t<PanelColumn>\r\n\t\t\t\t<Text $textAlign='center'>Controls</Text>\r\n\t\t\t\t<GridRow $height='56px'>\r\n\t\t\t\t\t<ButtonWide $expand={true} $colorTag='purple' onClick={() => { showScores(); }}>Show Scores</ButtonWide>\r\n\t\t\t\t\t<ButtonWide $expand={true} $colorTag='purple' onClick={() => { hideScores(); }}>Hide Scores</ButtonWide>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<GridRow $height='56px'>\r\n\t\t\t\t\t<ButtonWide $expand={true} $colorTag='purple' onClick={() => { showCommentators(); }}>Show Comms</ButtonWide>\r\n\t\t\t\t\t<ButtonWide $expand={true} $colorTag='purple' onClick={() => { hideCommentators(); }}>Hide Comms</ButtonWide>\r\n\t\t\t\t</GridRow>\r\n\t\t\t</PanelColumn>\r\n\t\t</PanelContainer>\r\n\t)\r\n}\r\n\r\nconst PanelContainer = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tgap: 5px;\r\n\tpadding: 5px 10px 12px;\t\r\n`;\r\n\r\nconst PanelRow = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n`;\r\n\r\nconst TeamScoreRow = styled.div`\r\n\twidth: 100%;\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 1fr max-content;\r\n`;\r\n\r\nconst PanelColumn = styled.div`\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\twidth: 100%;\r\n`;\r\n\r\nconst ScoreColumn = styled(PanelColumn)`\r\n\tpadding-top: 5.7rem;\r\n\tjustify-content: flex-start;\r\n\tgap: 1.7rem;\r\n`;\r\n\r\nconst ScoreButton = styled(ButtonWide)`\r\n\tmargin: 0 10px;\r\n\twidth: 40px;\r\n\theight: 40px;\r\n\tpadding: 3px 0;\r\n\tfont-size: 1.5rem;\r\n`;\r\n\r\nconst ColorButton = styled(ButtonWide)`\r\n\tmargin: 0 5px;\r\n\tpadding: 8px 3px;\r\n`;\r\n\r\nconst ColorDisplay = styled.div<{ $size: number, $color: string }>`\r\n\tmargin: 0 3px;\r\n\theight: ${({ $size }) => $size}px;\r\n\twidth: ${({ $size }) => $size}px;\r\n\tborder: 3px solid black;\r\n\tborder-radius: 5px;\r\n\tbackground-color: ${({ $color }) => $color};\r\n`;\r\n\r\nconst BigNumbers = styled.div`\r\n\tfont-size: 2.5rem;\r\n\tfont-weight: 600;\r\n\tfont-family: 'Courier New', Courier, Consolas, monospace;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<React.StrictMode><Scores /></React.StrictMode>);","{\r\n\t\"localMode\": [\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"name\": \"YellowPurple\",\r\n\t\t\t\"teamA\": \"#ceb121\",\r\n\t\t\t\"teamB\": \"#9025c6\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"name\": \"TurquoiseRed\",\r\n\t\t\t\"teamA\": \"#1ec0ad\",\r\n\t\t\t\"teamB\": \"#d74b31\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 2,\r\n\t\t\t\"name\": \"TurquoisePink\",\r\n\t\t\t\"teamA\": \"#1bbeab\",\r\n\t\t\t\"teamB\": \"#c43a6e\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 3,\r\n\t\t\t\"name\": \"OrangePurple\",\r\n\t\t\t\"teamA\": \"#cd510a\",\r\n\t\t\t\"teamB\": \"#6e04b6\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 4,\r\n\t\t\t\"name\": \"LimegreenPurple\",\r\n\t\t\t\"teamA\": \"#becd41\",\r\n\t\t\t\"teamB\": \"#6325cd\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 5,\r\n\t\t\t\"name\": \"GreenPurple\",\r\n\t\t\t\"teamA\": \"#a0c937\",\r\n\t\t\t\"teamB\": \"#ba30b0\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 6,\r\n\t\t\t\"name\": \"BlueYellow\",\r\n\t\t\t\"teamA\": \"#1a1aae\",\r\n\t\t\t\"teamB\": \"#e38d24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 7,\r\n\t\t\t\"name\": \"YellowBlue\",\r\n\t\t\t\"teamA\": \"#d0be08\", \r\n\t\t\t\"teamB\": \"#3a0ccd\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 8,\r\n\t\t\t\"name\": \"OrangeBlue\",\r\n\t\t\t\"teamA\": \"#de6624\",\r\n\t\t\t\"teamB\": \"#343bc4\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 9,\r\n\t\t\t\"name\": \"PinkGreen\",\r\n\t\t\t\"teamA\": \"#c12d74\",\r\n\t\t\t\"teamB\": \"#2cb721\"\r\n\t\t}\r\n\t],\r\n\t\"onlineMode\": [\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"name\": \"GreenPurple\",\r\n\t\t\t\"teamA\": \"#a0c937\",\r\n\t\t\t\"teamB\": \"#ba30b0\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"name\": \"OrangeBlue\",\r\n\t\t\t\"teamA\": \"#de6624\",\r\n\t\t\t\"teamB\": \"#343bc4\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 2,\r\n\t\t\t\"name\": \"OrangePurple\",\r\n\t\t\t\"teamA\": \"#cd510a\",\r\n\t\t\t\"teamB\": \"#6e04b6\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 3,\r\n\t\t\t\"name\": \"BlueYellow\",\r\n\t\t\t\"teamA\": \"#1a1aae\",\r\n\t\t\t\"teamB\": \"#e38d24\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 4,\r\n\t\t\t\"name\": \"LimegreenPurple\",\r\n\t\t\t\"teamA\": \"#becd41\",\r\n\t\t\t\"teamB\": \"#6325cd\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 5,\r\n\t\t\t\"name\": \"YellowBlue\",\r\n\t\t\t\"teamA\": \"#d0be08\", \r\n\t\t\t\"teamB\": \"#3a0ccd\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 6,\r\n\t\t\t\"name\": \"TurquoiseRed\",\r\n\t\t\t\"teamA\": \"#1ec0ad\",\r\n\t\t\t\"teamB\": \"#d74b31\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 7,\r\n\t\t\t\"name\": \"TurquoisePink\",\r\n\t\t\t\"teamA\": \"#1bbeab\",\r\n\t\t\t\"teamB\": \"#c43a6e\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 8,\r\n\t\t\t\"name\": \"PinkGreen\",\r\n\t\t\t\"teamA\": \"#c12d74\",\r\n\t\t\t\"teamB\": \"#2cb721\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 9,\r\n\t\t\t\"name\": \"YellowPurple\",\r\n\t\t\t\"teamA\": \"#ceb121\",\r\n\t\t\t\"teamB\": \"#9025c6\"\r\n\t\t}\r\n\t],\r\n\t\"colorLock\": [\r\n\t\t{\r\n\t\t\t\"index\": 0,\r\n\t\t\t\"name\": \"YellowBlue\",\r\n\t\t\t\"teamA\": \"#caba21\",\r\n\t\t\t\"teamB\": \"#502eba\"\r\n\t\t},\r\n\t\t{\r\n\t\t\t\"index\": 1,\r\n\t\t\t\"name\": \"OrangeBlue\",\r\n\t\t\t\"teamA\": \"#d99116\",\r\n\t\t\t\"teamB\": \"#1655be\"\r\n\t\t}\r\n\t]\r\n}"],"names":["React","useCallback","useEffect","useState","useMemo","styled","MatchData","createRoot","Checkbox","GridRow","ButtonWide","Text","Row","Input","Fieldset","useReplicant","CaretLeft","CaretRight","Swap","modulo","getIndexColor","clamp","Colors","cloneDeep","isEqual","MIN_SCORE","MAX_SCORE","defaultMatchData","matchInfo","teamA","teamB","scoreA","scoreB","matchColor","localMode","swapColor","Scores","match","setMatch","bundle","defaultValue","dashboardMatch","setDashboardMatch","colorIndex","setColorIndex","colorLock","setColorLock","onlineMode","setOnlineMode","colorList","saveChanges","hasUnsavedChanges","showScores","nodecg","sendMessage","hideScores","showCommentators","hideCommentators","updateColorIndex","index","length","currentMatch","event","target","value","PanelContainer","div","withConfig","displayName","componentId","PanelRow","TeamScoreRow","PanelColumn","ScoreColumn","ScoreButton","ColorButton","ColorDisplay","$size","$color","BigNumbers","root","document","getElementById","render","module","exports","JSON","parse"],"version":3,"file":"scores.65aa65e3.js.map","sourceRoot":"../"}