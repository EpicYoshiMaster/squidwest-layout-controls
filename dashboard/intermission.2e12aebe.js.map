{"mappings":"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","sources":["src/dashboard/Intermission.tsx","src/dashboard/components/CollapseContainer.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\r\nimport styled from 'styled-components'\r\nimport { createRoot } from 'react-dom/client';\r\nimport { Checkbox, Text, Row, GridRow, Fieldset, Input, ButtonWide } from './components/Layout';\r\nimport { useReplicant } from '@nodecg/react-hooks'\r\nimport { IntermissionData } from 'schemas/intermissionData';\r\nimport { CollapseContainer } from './components/CollapseContainer';\r\nimport { cloneDeep, isEqual } from 'lodash';\r\n\r\nconst defaultIntermissionSettings: IntermissionData = {\r\n\tshowTime: true,\r\n\tshowEvent: true,\r\n\tshowLocation: true,\r\n\tshowFlavorText: true,\r\n\tflavorText: \"\"\r\n}\r\n\r\nexport function Intermission() {\r\n\tconst [intermissionSettings, setIntermissionSettings] = useReplicant<IntermissionData>('intermission', { bundle: 'squidwest-layout-controls'});\r\n\tconst [dashboardIntermissionSettings, setDashboardIntermissionSettings] = useState<IntermissionData>(defaultIntermissionSettings);\r\n\r\n\tuseEffect(() => {\r\n\t\tif(!intermissionSettings) return;\r\n\r\n\t\tsetDashboardIntermissionSettings(cloneDeep(intermissionSettings));\r\n\t}, [intermissionSettings]);\r\n\r\n\tconst saveChanges = useCallback(() => {\r\n\t\tsetIntermissionSettings(dashboardIntermissionSettings);\r\n\t}, [dashboardIntermissionSettings, setIntermissionSettings]);\r\n\r\n\tconst hasUnsavedChanges = useMemo(() => {\r\n\t\treturn !isEqual(intermissionSettings, dashboardIntermissionSettings);\r\n\t}, [intermissionSettings, dashboardIntermissionSettings]);\r\n\r\n\treturn (\r\n\t\t<PanelContainer>\r\n\t\t\t<CollapseContainer title=\"Omnibar\">\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<Row $justify='flex-end'>\r\n\t\t\t\t\t\t<Text>Show Time/Date</Text>\r\n\t\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\t\t$checked={dashboardIntermissionSettings.showTime} \r\n\t\t\t\t\t\t\tonClick={() => setDashboardIntermissionSettings((currentSettings) => { return { ...currentSettings, showTime: !currentSettings.showTime }}) } />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row $justify='flex-end'>\r\n\t\t\t\t\t\t<Text>Show Event Info</Text>\r\n\t\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\t\t$checked={dashboardIntermissionSettings.showEvent} \r\n\t\t\t\t\t\t\tonClick={() => setDashboardIntermissionSettings((currentSettings) => { return { ...currentSettings, showEvent: !currentSettings.showEvent }}) } />\r\n\t\t\t\t\t</Row>\t\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<GridRow>\r\n\t\t\t\t\t<Row $justify='flex-end'>\r\n\t\t\t\t\t\t<Text>Show Event Location</Text>\r\n\t\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\t\t$checked={dashboardIntermissionSettings.showLocation} \r\n\t\t\t\t\t\t\tonClick={() => setDashboardIntermissionSettings((currentSettings) => { return { ...currentSettings, showLocation: !currentSettings.showLocation }}) } />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row $justify='flex-end'>\r\n\t\t\t\t\t\t<Text>Show Flavor Text</Text>\r\n\t\t\t\t\t\t<Checkbox \r\n\t\t\t\t\t\t\t$checked={dashboardIntermissionSettings.showFlavorText} \r\n\t\t\t\t\t\t\tonClick={() => setDashboardIntermissionSettings((currentSettings) => { return { ...currentSettings, showFlavorText: !currentSettings.showFlavorText }}) } />\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</GridRow>\r\n\t\t\t\t<Row $justify=\"flex-end\">\r\n\t\t\t\t\t<Fieldset $expand>\r\n\t\t\t\t\t\t<legend><Text>Flavor Text</Text></legend>\r\n\t\t\t\t\t\t<Input type=\"text\" \r\n\t\t\t\t\t\t\t$expand\r\n\t\t\t\t\t\t\tvalue={dashboardIntermissionSettings.flavorText} \r\n\t\t\t\t\t\t\tonChange={(event) => setDashboardIntermissionSettings((currentSettings) => { return { ...currentSettings, flavorText: event.target.value }}) }/>\r\n\t\t\t\t\t</Fieldset>\r\n\t\t\t\t</Row>\r\n\t\t\t</CollapseContainer>\r\n\t\t\t<GridRow $height='56px'>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<ButtonWide $expand={true} $colorTag={hasUnsavedChanges ? 'dark-red' : 'pink'} onClick={() => { saveChanges(); }}>{hasUnsavedChanges ? 'Save Changes' :  'Saved!'}</ButtonWide>\r\n\t\t\t\t<div></div>\r\n\t\t\t</GridRow>\r\n\t\t</PanelContainer>\r\n\t)\r\n}\r\n\r\nconst PanelContainer = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tgap: 5px;\r\n\tpadding: 5px 10px 12px;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<Intermission />);","import React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { TransparentButton } from './Layout';\r\nimport { CaretDown, CaretUp } from '@phosphor-icons/react'\r\n\r\ninterface CollapseContainerProps {\r\n\ttitle: string | React.ReactElement;\r\n\tchildren: React.ReactNode;\r\n\tcolorTag?: string;\r\n}\r\n\r\nexport const CollapseContainer: React.FC<CollapseContainerProps> = ({ title, children, colorTag }) => {\r\n\tconst [collapsed, setCollapsed] = useState(true);\r\n\r\n\treturn (\r\n\t\t<Container $colorTag={colorTag}>\r\n\t\t\t<Header $colorTag={colorTag}>\r\n\t\t\t\t<Front>\r\n\t\t\t\t\t{title}\r\n\t\t\t\t</Front>\r\n\t\t\t\t<TransparentButton onClick={() => { setCollapsed(!collapsed); }}>\r\n\t\t\t\t\t{collapsed ? (<CaretDown />) : (<CaretUp />)}\r\n\t\t\t\t</TransparentButton>\r\n\t\t\t</Header>\r\n\t\t\t{!collapsed && ( <Content $colorTag={colorTag}> {children} </Content> )}            \r\n\t\t</Container>\r\n\t)\r\n};\r\n\r\nconst Container = styled.div<{ $colorTag?: string }>`\r\n\tposition: relative;\r\n\r\n\twidth: 100%;\r\n\tborder-radius: 0.5rem;\r\n\tbackground-color: var(--collapse${({ $colorTag }) => $colorTag ? `-${$colorTag}` : ``});\r\n`;\r\n\r\nconst Header = styled.div<{ $colorTag?: string }>`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: space-between;\r\n\talign-items: center;\r\n\tpadding: 3px 8px;\r\n\tgap: 5px;\r\n\tborder-radius: 0.5rem;\r\n\tbackground-color: var(--collapse${({ $colorTag }) => $colorTag ? `-${$colorTag}` : ``});\r\n\tborder: 3px solid var(--collapse-${({ $colorTag }) => $colorTag ? `${$colorTag}-` : ``}border);\r\n`;\r\n\r\nconst Front = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tjustify-content: flex-start;\r\n\talign-items: center;\r\n\tgap: 5px;\r\n\tfont-size: 1.3rem;\r\n\tfont-weight: 700;\r\n`;\r\n\r\nconst Content = styled.div<{ $colorTag?: string }>`\r\n\tposition: relative;\t\r\n\tmargin-top: -8px;\r\n\tpadding: 10px 8px 5px;\r\n\tborder: 3px solid var(--collapse-${({ $colorTag }) => $colorTag ? `${$colorTag}-` : ``}border);\r\n\tborder-top: none;\r\n\tborder-radius: 0 0 0.5rem 0.5rem;\r\n`;"],"names":["React","useCallback","useEffect","useMemo","useState","styled","createRoot","Checkbox","Text","Row","GridRow","Fieldset","Input","ButtonWide","useReplicant","IntermissionData","CollapseContainer","cloneDeep","isEqual","defaultIntermissionSettings","showTime","showEvent","showLocation","showFlavorText","flavorText","Intermission","intermissionSettings","setIntermissionSettings","bundle","dashboardIntermissionSettings","setDashboardIntermissionSettings","saveChanges","hasUnsavedChanges","currentSettings","event","target","value","PanelContainer","div","withConfig","displayName","componentId","root","document","getElementById","render","TransparentButton","CaretDown","CaretUp","CollapseContainerProps","title","ReactElement","children","ReactNode","colorTag","FC","collapsed","setCollapsed","Container","$colorTag","Header","Front","Content"],"version":3,"file":"intermission.2e12aebe.js.map","sourceRoot":"../"}